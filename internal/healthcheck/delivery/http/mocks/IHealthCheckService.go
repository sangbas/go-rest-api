// Code generated by MockGen. DO NOT EDIT.
// Source: bitbucket.org/kudoindonesia/kiosk_uam_service/internal/healthcheck/service (interfaces: IHealthCheckService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	service "github.com/go-rest-api/internal/healthcheck/service"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIHealthCheckService is a mock of IHealthCheckService interface
type MockIHealthCheckService struct {
	ctrl     *gomock.Controller
	recorder *MockIHealthCheckServiceMockRecorder
}

// MockIHealthCheckServiceMockRecorder is the mock recorder for MockIHealthCheckService
type MockIHealthCheckServiceMockRecorder struct {
	mock *MockIHealthCheckService
}

// NewMockIHealthCheckService creates a new mock instance
func NewMockIHealthCheckService(ctrl *gomock.Controller) *MockIHealthCheckService {
	mock := &MockIHealthCheckService{ctrl: ctrl}
	mock.recorder = &MockIHealthCheckServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIHealthCheckService) EXPECT() *MockIHealthCheckServiceMockRecorder {
	return m.recorder
}

// API mocks base method
func (m *MockIHealthCheckService) API(arg0 context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "API", arg0)
}

// API indicates an expected call of API
func (mr *MockIHealthCheckServiceMockRecorder) API(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "API", reflect.TypeOf((*MockIHealthCheckService)(nil).API), arg0)
}

// Infrastructure mocks base method
func (m *MockIHealthCheckService) Infrastructure(arg0 context.Context) service.InfrastructureHealthCheckResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Infrastructure", arg0)
	ret0, _ := ret[0].(service.InfrastructureHealthCheckResponse)
	return ret0
}

// Infrastructure indicates an expected call of Infrastructure
func (mr *MockIHealthCheckServiceMockRecorder) Infrastructure(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Infrastructure", reflect.TypeOf((*MockIHealthCheckService)(nil).Infrastructure), arg0)
}
